{"version":3,"sources":["section-detection.js"],"names":["sidebarMenu","document","querySelector","sectionsToTrack","querySelectorAll","middleOfViewport","window","innerHeight","elementWithPriority","elementsInViewport","elements","forEach","element","elementPosition","getBoundingClientRect","top","height","push","classList","remove","getElementsInViewport","sort","a","b","activateMenuItem","idToActivate","currentActiveItem","id","add","addEventListener"],"mappings":";AACA,IAAMA,EAAcC,SAASC,cAAc,iBACvCF,GACD,WAEOG,IAAAA,EAAkBF,SAASG,iBAAiB,qBAC5CC,EAAmBC,OAAOC,YAAc,EAmBxCC,EAAsB,WACpBC,IAAAA,EAjBsB,SAAUC,GAChCD,IAAAA,EAAqB,GAWpBA,OAVPC,EAASC,QAAQ,SAAUC,GACnBC,IAAAA,EAAkBD,EAAQE,wBAC5BD,EAAgBE,IAAM,GAAKF,EAAgBG,QAAgC,EAAvBH,EAAgBE,IACtEN,EAAmBQ,KAAK,CAAEL,QAASA,EAASG,IAAKF,EAAgBE,MACxDF,EAAgBE,KAAO,GAAKF,EAAgBE,IAAMV,EAC3DI,EAAmBQ,KAAK,CAAEL,QAASA,EAASG,IAAKF,EAAgBE,MAEjEH,EAAQM,UAAUC,OAAO,YAGtBV,EAKoBW,CAAsBjB,GAU1CM,OATPA,EAAmBY,KAAK,SAAUC,EAAGC,GAO5BD,OANHA,EAAEP,IAAM,IACVO,EAAEP,KAAe,EAATO,EAAEP,KAERQ,EAAER,IAAM,IACVQ,EAAER,KAAe,EAATQ,EAAER,KAELO,EAAEP,IAAMQ,EAAER,MAEZN,EAAmB,IAKtBe,EAAmB,WACjBC,IAAAA,EAAejB,IACfkB,EAAoBzB,SAASC,cAAc,8BAC7CwB,GACFA,EAAkBR,UAAUC,OAAO,UAEjCM,IACqBxB,SAASC,cAAc,kBAAoBuB,EAAab,QAAQe,GAAK,MAC7ET,UAAUU,IAAI,WAIjCJ,IACAlB,OAAOuB,iBAAiB,SAAUL,GAnDnC","file":"section-detection.1adc35e8.js","sourceRoot":"..","sourcesContent":["\nconst sidebarMenu = document.querySelector('.sidebar-menu');\nif (sidebarMenu) {\n  (function () {\n    \n    const sectionsToTrack = document.querySelectorAll('.section-to-track');\n    const middleOfViewport = window.innerHeight / 2;\n    \n    // Returns array of elements that are in range - top(0px) - middleOfViewport.\n    const getElementsInViewport = function (elements) {\n      const elementsInViewport = [];\n      elements.forEach(function (element) {\n        const elementPosition = element.getBoundingClientRect();\n        if (elementPosition.top < 0 && elementPosition.height > elementPosition.top * -1) {\n          elementsInViewport.push({ element: element, top: elementPosition.top });\n        } else if (elementPosition.top >= 0 && elementPosition.top < middleOfViewport) {\n          elementsInViewport.push({ element: element, top: elementPosition.top });\n        } else {\n          element.classList.remove('active'); \n        }\n      })\n      return elementsInViewport;\n    }\n\n    // Returns Element whos top position is closest to the top.\n    const elementWithPriority = function () {\n      const elementsInViewport = getElementsInViewport(sectionsToTrack);\n      elementsInViewport.sort(function (a, b) {\n        if (a.top < 0) {\n          a.top = a.top * -1;\n        }\n        if (b.top < 0) {\n          b.top = b.top * -1;\n        }\n        return a.top - b.top\n      });\n      return elementsInViewport[0];\n    }\n\n    // This function gets run on load and page scroll.\n    // Add active class to menu Item if tracked section is in range.\n    const activateMenuItem = function () {\n      const idToActivate = elementWithPriority();\n      const currentActiveItem = document.querySelector('.sidebar-menu li a.active');\n      if (currentActiveItem) {\n        currentActiveItem.classList.remove('active');\n      }\n      if (idToActivate) {\n        const itemToActivate = document.querySelector('[data-section=\"' + idToActivate.element.id + '\"]');\n        itemToActivate.classList.add('active');\n      }\n    }\n\n    activateMenuItem();\n    window.addEventListener('scroll', activateMenuItem);\n  \n  })()\n}\n"]}